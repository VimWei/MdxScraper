[project]
name = "MdxScraper"
version = "5.2.8"
description = "Extract specific words from an MDX dictionary and generate HTML, WEBP/PNG/JPG or PDF files with ease."
readme = "README.md"
requires-python = ">=3.11"
license = { text = "GPL-3.0" }
authors = [
  { name = "VimWei" }
]
dependencies = [
    'imgkit>=1.2.3',
    'pdfkit>=1.0.0',
    'openpyxl>=3.1.5',
    'chardet>=5.2.0',
    'beautifulsoup4>=4.13.5',
    'lxml>=6.0.1',
    'tomli-w>=1.0.0',
    'PySide6>=6.7.0',
    'Pillow>=10.0.0',
]

[project.urls]
Homepage = "https://github.com/VimWei/MdxScraper"

[project.scripts]
mdxscraper = "mdxscraper.gui.main_window:run_gui"

[tool.uv]
package = true

[dependency-groups]
dev = [
    'pytest>=8.3.0',
    'pytest-cov>=6.0.0',
    'black>=24.8.0',
    'isort>=5.13.2',
    'mypy>=1.11.2',
    'pre-commit>=3.8.0',
]

[tool.isort]
profile = "black"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.pytest.ini_options]
testpaths = ["tests"]
cache_dir = "tests/.pytest_cache"
addopts = [
    "--cov=src/mdxscraper",
    "--cov-report=html:tests/htmlcov",
    "--cov-report=term-missing",
    "--cov-report=xml:tests/coverage.xml",
]

[tool.coverage.run]
source = ["src/mdxscraper"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*"
]
data_file = "tests/.coverage"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
